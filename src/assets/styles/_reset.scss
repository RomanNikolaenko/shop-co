@use './functions' as *;

*,
::before,
::after {
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

:where(ul, ol):where([class]) {
  padding-inline-start: 0;
}

body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-inline-start: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

p {
  --paragraphMarginBottom: rem(16);

  margin-block: 0;
}

p:where(:not([class]):not(:last-child)) {
  margin-block-end: var(--paragraphMarginBottom);
}

img,
video {
  display: block;
  max-inline-size: 100%;
  block-size: auto;
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  border: none;
  border-radius: 0;
  box-shadow: none;
  background-color: transparent;
  color: inherit;
  letter-spacing: inherit;
}

html {
  block-size: 100%;
  scrollbar-gutter: stable;
  scroll-behavior: smooth;
}

body {
  min-block-size: 100%;
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: inherit;
  user-select: none;

  &:where([class]) {
    display: inline-flex;
    outline: none;
  }
}

button,
label {
  cursor: pointer;
}

:where([fill]:not([fill='none'], [fill^='url'])) {
  fill: currentColor;
}

:where([stroke]:not([stroke='none'], [stroke^='url'])) {
  stroke: currentColor;
}

svg {
  block-size: 100%;
  inline-size: 100%;

  * {
    transition-property: fill, stroke;
  }
}

:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
